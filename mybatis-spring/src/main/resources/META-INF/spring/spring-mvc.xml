<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.1.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    <!-- 自动扫描该包，将 Spring Bean 注册到 Spring 的上下文中 -->
    <context:component-scan base-package="tk.mybatis.simple" />

    <!--避免 IE 执行 AJAX 时，返回 JSON 出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!-- 启动 SpringMVC 的注解功能，完成请求和注解 POJO 的映射 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter ">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
            </list>
        </property>
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，pom 中也不必引入上传组件包 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 100M -->
        <property name="maxUploadSize" value="104857600" />
        <!-- 内存中的最大值 4M-->
        <property name="maxInMemorySize" value="40960" />
        <!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->
        <property name="resolveLazily" value="true"/>
    </bean>

    <!-- 定义 ViewResolver（视图解析器），配置多个需要使用 order 属性排序，InternalResourceViewResolver 放在最后-->
    <bean class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorParameter" value="true" />
        <property name="parameterName" value="format"/>
        <property name="ignoreAcceptHeader" value="true" />
        <property name="mediaTypes">
            <value>
                <!-- 告诉视图解析器，返回的类型为 json 格式 -->
                json=application/json
                xml=application/xml
                html=text/html
            </value>
        </property>
        <property name="defaultContentType" value="text/html" />

    </bean>

    <!-- 定义跳转的文件的前后缀，视图名称解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 自动给后面 action 的方法 return 的字符串加上前缀和后缀，变成一个可用的地址 -->
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
    <mvc:annotation-driven />
    <!-- 让一些静态的不被 SpringMVC 的拦截器拦截 -->
    <mvc:default-servlet-handler/>
    <!-- 静态资源 -->
    <mvc:resources location="static/" mapping="/static/**"/>

</beans>